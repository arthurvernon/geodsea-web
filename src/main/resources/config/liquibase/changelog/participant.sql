-----------------------------------------
-- Address
------------------------------------------

--CREATE SEQUENCE BOAT.ADDRESS_ID_SEQ INCREMENT 1 MINVALUE 100 START 100 CACHE 1;
--ALTER TABLE BOAT.ADDRESS_ID_SEQ OWNER TO geodsea;
--
--
--CREATE TABLE BOAT.T_ADDRESS (
--   ID                         BIGINT       NOT NULL PRIMARY KEY DEFAULT nextval('BOAT.ADDRESS_ID_SEQ'),
--   FORMATTED VARCHAR(100) NULL,
--   POINT         geometry (POINT, 4326)
-- );
--
-- ALTER TABLE BOAT.T_ADDRESS OWNER TO geodsea;
-- ALTER SEQUENCE BOAT.ADDRESS_ID_SEQ OWNED BY BOAT.T_ADDRESS.ID;
-- ALTER TABLE BOAT.T_PARTICIPANT ADD CONSTRAINT UQ_PARTICIPANT_NAME UNIQUE (PARTICIPANT_NAME);
--
-- COMMENT ON COLUMN BOAT.T_ADDRESS.FORMATTED IS 'the google places formatted street address';
-- COMMENT ON COLUMN BOAT.T_ADDRESS.POINT IS 'the geographic point returned by google places for the street address';
--
-- CREATE INDEX IDX_ADDRESS_GIST ON BOAT.T_ADDRESS USING GIST (POINT);


-----------------------------------------
-- Participant
------------------------------------------


CREATE SEQUENCE BOAT.PARTICIPANT_ID_SEQ INCREMENT 1 MINVALUE 100 START 100 CACHE 1;


ALTER TABLE BOAT.PARTICIPANT_ID_SEQ OWNER TO geodsea;

CREATE TABLE BOAT.T_PARTICIPANT (
  ID                         BIGINT       NOT NULL PRIMARY KEY DEFAULT nextval('BOAT.PARTICIPANT_ID_SEQ'),
  PARTICIPANT_NAME           VARCHAR(100) NOT NULL,
  REGISTRATION_TOKEN_EXPIRES TIMESTAMP    NULL,
  REGISTRATION_TOKEN         VARCHAR(50)  NULL,
  ENABLED                    BOOLEAN      NOT NULL DEFAULT FALSE,
  CREATED_BY                 VARCHAR(50)  NULL DEFAULT 'system',
  CREATED_DATE               TIMESTAMP    NOT NULL DEFAULT now(),
  LAST_MODIFIED_BY           VARCHAR(50)  NULL,
  LAST_MODIFIED_DATE         TIMESTAMP    NULL
);

ALTER TABLE BOAT.T_PARTICIPANT OWNER TO geodsea;
ALTER SEQUENCE BOAT.PARTICIPANT_ID_SEQ OWNED BY BOAT.T_PARTICIPANT.ID;
ALTER TABLE BOAT.T_PARTICIPANT ADD CONSTRAINT UQ_PARTICIPANT_NAME UNIQUE (PARTICIPANT_NAME);

COMMENT ON COLUMN BOAT.T_PARTICIPANT.PARTICIPANT_NAME IS 'unique identifier for a participant';
COMMENT ON COLUMN BOAT.T_PARTICIPANT.REGISTRATION_TOKEN IS 'token that exists when account is initially created';
COMMENT ON COLUMN BOAT.T_PARTICIPANT.REGISTRATION_TOKEN_EXPIRES IS 'time up till when the registration can be completed';
COMMENT ON COLUMN BOAT.T_PARTICIPANT.ENABLED IS 'allows admin to lock the account. True if the participant may access the system, false otherwise';
COMMENT ON COLUMN BOAT.T_PARTICIPANT.CREATED_BY IS 'The participant name of the user who created this participant';
COMMENT ON COLUMN BOAT.T_PARTICIPANT.CREATED_DATE IS 'Date/time when the user created this participant';
COMMENT ON COLUMN BOAT.T_PARTICIPANT.LAST_MODIFIED_BY IS 'The participant who last modified this record, null if it has not been modified';
COMMENT ON COLUMN BOAT.T_PARTICIPANT.LAST_MODIFIED_DATE IS 'When (if ever) the participant''s details were last updated';

CREATE INDEX PARTICIPANT_NAME_IDX ON BOAT.T_PARTICIPANT (PARTICIPANT_NAME);


CREATE TABLE BOAT.T_PERSON (
  PERSON_ID      BIGINT       NOT NULL PRIMARY KEY REFERENCES BOAT.T_PARTICIPANT (ID) ON DELETE CASCADE,
  FIRST_NAME     VARCHAR(50)  NOT NULL,
  LAST_NAME      VARCHAR(50)  NOT NULL,
  EMAIL          VARCHAR(100) NOT NULL,
  LANG_KEY       VARCHAR(5)   NULL,
  BIRTH_DATE     DATE         NULL,
  TELEPHONE      VARCHAR(20)  NULL,
  PASSWORD       VARCHAR(150) NOT NULL,
  LANGUAGE_KEY   VARCHAR(5),
  ADDRESS_FORMATTED VARCHAR(100) NULL,
  ADDRESS_POINT         geometry (POINT, 4326)

);

ALTER TABLE BOAT.T_PERSON OWNER TO geodsea;

CREATE INDEX PER_EMAIL_IDX ON BOAT.T_PERSON (EMAIL);
CREATE INDEX IDX_ADDRESS_GIST ON BOAT.T_PERSON USING GIST (ADDRESS_POINT);

------------------------------------------
-- Street Address for a person
------------------------------------------
--
--CREATE TABLE BOAT.T_PERSON_ADDRESS (
--  participant_id BIGINT NOT NULL REFERENCES BOAT.T_PARTICIPANT ON DELETE CASCADE ON UPDATE RESTRICT,
--  address_id  BIGINT NOT NULL REFERENCES BOAT.T_ADDRESS ON DELETE CASCADE ON UPDATE RESTRICT,
--  PRIMARY KEY (participant_id, address_id)
--);
--ALTER TABLE BOAT.T_PERSON_ADDRESS OWNER TO geodsea;



----------------------------------------------------------
-- Group creation
----------------------------------------------------------

CREATE TABLE BOAT.T_PARTICIPANT_GROUP (
  ID             BIGINT       NOT NULL PRIMARY KEY REFERENCES BOAT.T_PARTICIPANT (ID) ON DELETE CASCADE,
  MEMBER_ID      BIGINT       NULL,
  PUBLISHED_NAME VARCHAR(100) NOT NULL,
  WEBSITE_URL    VARCHAR(100)
);

ALTER TABLE BOAT.T_PARTICIPANT_GROUP OWNER TO geodsea;
CREATE INDEX PARTICIPANT_PUBLISHED_NAME_IDX ON BOAT.T_PARTICIPANT_GROUP (PUBLISHED_NAME);
COMMENT ON COLUMN BOAT.T_PARTICIPANT_GROUP.MEMBER_ID IS 'The member who is the contact person (the one who registered the organisation). Should be not null but Hibernate doesn''t handle bidirectional FKs';


----------------------------------------------------------
-- Organisation member
----------------------------------------------------------


CREATE SEQUENCE BOAT.MEMBER_ID_SEQ INCREMENT 1 MINVALUE 1 START 1 CACHE 1;
ALTER TABLE BOAT.MEMBER_ID_SEQ OWNER TO geodsea;

CREATE TABLE BOAT.T_MEMBER (
  ID                   BIGINT  NOT NULL PRIMARY KEY DEFAULT nextval('BOAT.MEMBER_ID_SEQ'),
  PARTICIPANT_GROUP_ID BIGINT  NOT NULL REFERENCES BOAT.T_PARTICIPANT_GROUP ON UPDATE RESTRICT ON DELETE CASCADE,
  PARTICIPANT_ID       BIGINT  NOT NULL REFERENCES BOAT.T_PARTICIPANT ON UPDATE RESTRICT ON DELETE CASCADE,
  MEMBER_SINCE         DATE    NULL,
  MEMBER_UNTIL         DATE    NULL,
  ACTIVE               BOOLEAN NOT NULL DEFAULT FALSE,
  MANAGER              BOOLEAN NOT NULL DEFAULT FALSE
);
ALTER TABLE BOAT.T_MEMBER OWNER TO geodsea;
ALTER SEQUENCE BOAT.MEMBER_ID_SEQ OWNED BY BOAT.T_MEMBER.ID;

ALTER TABLE BOAT.T_MEMBER ADD CONSTRAINT UC_MEMBER_ONCE_ONLY UNIQUE (PARTICIPANT_GROUP_ID, PARTICIPANT_ID);

CREATE INDEX ORG_MEMBER_PARTICIPANT_IDX ON BOAT.T_MEMBER (PARTICIPANT_ID);

COMMENT ON TABLE BOAT.T_MEMBER IS 'The participants within an group which may be anyone except the group itself';

COMMENT ON COLUMN BOAT.T_MEMBER.PARTICIPANT_ID IS 'The immutable person or or group that belongs to this organisation';
COMMENT ON COLUMN BOAT.T_MEMBER.PARTICIPANT_GROUP_ID IS 'The immutable group that has this member';

----------------------------------------------------------
-- Constraint from organisation to member table for primary contact
----------------------------------------------------------

ALTER TABLE BOAT.T_PARTICIPANT_GROUP ADD CONSTRAINT FK_PARTICIPANT_GROUP_CONTACT
FOREIGN KEY (MEMBER_ID) REFERENCES BOAT.T_MEMBER (ID) ON DELETE CASCADE;


--------------------------------
-- Authorities
-------------------------------
CREATE TABLE BOAT.T_AUTHORITY (
  NAME                 VARCHAR(255) NOT NULL PRIMARY KEY
);

ALTER TABLE BOAT.T_AUTHORITY OWNER TO geodsea;



CREATE TABLE BOAT.T_PARTICIPANT_AUTHORITY (
  participant_id BIGINT NOT NULL REFERENCES BOAT.T_PARTICIPANT ON DELETE CASCADE ON UPDATE RESTRICT,
  NAME  VARCHAR(255) NOT NULL REFERENCES BOAT.T_AUTHORITY ON DELETE CASCADE ON UPDATE RESTRICT,
  PRIMARY KEY (participant_id, name)
);
ALTER TABLE BOAT.T_PARTICIPANT_AUTHORITY OWNER TO geodsea;



---------------------------------------------------------
-- Persistent Tokens that record concurrent user access
--------------------------------------------------------

CREATE TABLE BOAT.T_PERSISTENT_TOKEN (
  SERIES VARCHAR(255) PRIMARY KEY,
  PERSON_ID BIGINT REFERENCES BOAT.T_PERSON ON DELETE CASCADE ON UPDATE RESTRICT,
  TOKEN_VALUE VARCHAR(255),
  TOKEN_DATE DATE,
  IP_ADDRESS VARCHAR(39),
  USER_AGENT VARCHAR(255)
);
ALTER TABLE BOAT.T_PERSISTENT_TOKEN OWNER TO geodsea;

